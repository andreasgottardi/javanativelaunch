plugins {
    id 'java-library'
    id 'application'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {

	/* Load MinGW path from gradle.properties and add it in front of the global PATH variable. (Make gcc executable in this environment) */
	customPath = MINGW + System.getProperty("path.separator") + "$System.env.PATH"
	
	/* Load path to JDK from gradle.properties. */
	javaHome = JAVA_HOME
	
	mainClass = 'goa.systems.esp.EspServer'
	
	junitvers = '5.7.0'
}

mainClassName = mainClass
version = '0.0.1'

repositories {
    jcenter()
}

dependencies {

	implementation 'org.slf4j:slf4j-api:1.7.30'
	implementation 'ch.qos.logback:logback-core:1.2.3'
	implementation 'ch.qos.logback:logback-classic:1.2.3'
	
    testImplementation 'org.junit.jupiter:junit-jupiter-api:' + junitvers
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:' + junitvers
}

test {
    useJUnitPlatform()
}

jar {
	manifest {
		attributes 'Main-Class': mainClass
	}
}

task buildresources(type: Exec, group: 'build', description: 'The gcc build task.'){
	
	dependsOn build
	mustRunAfter build
	
	workingDir 'src/main/c/'
    environment "PATH", customPath
    
    commandLine 'windres', 'resources.rc', '-O', 'coff', '-o', 'resources.res'
}

/* Work in progress. */
task generateJavaC(type: Copy, group: 'build', description: 'The gcc build task.') {
	from filetree('src/main/c') {
		include 'java.gen.c'
        filter{ it.replaceAll('%%MAIN_CLASS%%', 'asdf')}
    }.files
	into 'src/main/c'
	rename { filename ->
        filename.replace 'java.gen.c', 'java.c'
    }
}

task makenativeexec(type: Exec, group: 'build', description: 'The gcc build task.'){
	
	dependsOn buildresources
	mustRunAfter buildresources
	
	workingDir 'src/main/c/'
    environment "PATH", customPath
    
	commandLine 'gcc.exe',
	'-I"' + javaHome + '\\include"',
	'-I"' + javaHome + '\\include\\win32"',
	'-o', "$buildDir" + '/runme.exe',
	'-Wall',
	'-pedantic',
	'-municode',
	// '-mwindows',
	'main.c', 'java.c', 'logging.c', 'resources.res',
	'-L"' + javaHome + '\\lib"',
	'-ljvm',
	
	standardOutput = new ByteArrayOutputStream()
	ext.output = {
		return standardOutput.toString()
	}
}
